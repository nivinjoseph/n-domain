{"version":3,"file":"domain-event.js","sourceRoot":"","sources":["../src/domain-event.ts"],"names":[],"mappings":";;AACA,0DAAiD;AAEjD,8BAA4B;AAC5B,wBAAiC;AAGjC,MAAsB,WAAW;IAc7B,YAAmB,IAAY,EAAE,aAAqB,eAAY,CAAC,GAAG,EAAE,UAAkB,CAAC;QAEvF,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,KAAK,GAAY,IAAK,CAAC,WAAW,EAAE,CAAC;QAE1C,mBAAK,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAE9B,mBAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAlBD,IAAW,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,IAAW,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,IAAW,UAAU,KAAa,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5D,IAAW,OAAO,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAkB/C,KAAK,CAAC,KAAQ;QAEjB,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAExD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,UAAU,CAAC,KAAU,CAAC,CAAC;QAE5B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtC,CAAC;IAEM,SAAS;QAEZ,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;YACxC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;IACP,CAAC;CAKJ;AArDD,kCAqDC","sourcesContent":["import { AggregateState } from \"./aggregate-state\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { SerializedDomainEvent } from \"./serialized-domain-event\";\nimport \"@nivinjoseph/n-ext\";\nimport { DomainHelper } from \".\";\n\n// public\nexport abstract class DomainEvent<T extends AggregateState>\n{\n    private readonly _user: string; // who\n    private readonly _name: string; // what\n    private readonly _occurredAt: number; // when\n    private _version: number;\n\n\n    public get user(): string { return this._user; }\n    public get name(): string { return this._name; }\n    public get occurredAt(): number { return this._occurredAt; }\n    public get version(): number { return this._version; }\n\n    // occurredAt is epoch milliseconds\n    public constructor(user: string, occurredAt: number = DomainHelper.now, version: number = 0)\n    {\n        given(user, \"user\").ensureHasValue().ensureIsString();\n        this._user = user;\n        \n        this._name = (<Object>this).getTypeName();\n\n        given(occurredAt, \"occurredAt\").ensureHasValue().ensureIsNumber().ensure(t => t > 0);\n        this._occurredAt = occurredAt;\n\n        given(version, \"version\").ensureIsNumber().ensure(t => t >= 0);\n        this._version = version;\n    }\n\n\n    public apply(state: T): void\n    {\n        given(state, \"state\").ensureHasValue().ensureIsObject();\n\n        this._version = state.version || 0; // the version of the state before the application of the event => becomes the version of the event\n\n        this.applyEvent(state as T);\n\n        state.version = this._version + 1;\n    }\n\n    public serialize(): SerializedDomainEvent\n    {\n        return Object.assign(this.serializeEvent(), {\n            $user: this._user,\n            $name: this._name,\n            $occurredAt: this._occurredAt,\n            $version: this._version\n        });\n    }\n\n\n    protected abstract serializeEvent(): object;\n    protected abstract applyEvent(state: T): void;\n}"]}