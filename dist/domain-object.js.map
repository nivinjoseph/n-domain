{"version":3,"file":"domain-object.js","sourceRoot":"","sources":["../src/domain-object.ts"],"names":[],"mappings":";;AAAA,8BAA4B;AAG5B,MAAsB,YAAY;IAUvB,MAAM,CAAC,KAAmB;QAE7B,IAAI,KAAK,IAAI,IAAI;YACb,OAAO,KAAK,CAAC;QAEjB,IAAI,KAAK,KAAK,IAAI;YACd,OAAO,IAAI,CAAC;QAEhB,IAAa,KAAM,CAAC,WAAW,EAAE,KAAc,IAAK,CAAC,WAAW,EAAE;YAC9D,OAAO,KAAK,CAAC;QAEjB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IASlF,CAAC;CACJ;AA/BD,oCA+BC","sourcesContent":["import \"@nivinjoseph/n-ext\";\n\n// public\nexport abstract class DomainObject\n{\n    /**\n     * Please also provide corresponding static deserialize method\n     */\n    public abstract serialize(): any;\n    \n    /**\n     * @param value (the value to compare)\n     */\n    public equals(value: DomainObject): boolean\n    {\n        if (value == null)\n            return false;\n        \n        if (value === this)\n            return true;\n        \n        if ((<Object>value).getTypeName() !== (<Object>this).getTypeName())\n            return false;\n        \n        return JSON.stringify(this.serialize()) === JSON.stringify(value.serialize());\n        \n        // for (const key in this)\n        // {\n        //     if (this[key] !== (<any>value)[key])\n        //         return false;\n        // }\n        \n        // return true;\n    }\n}"]}